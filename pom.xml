<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <default.encoding>UTF-8</default.encoding>
        <project.build.sourceEncoding>${default.encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${default.encoding}</project.reporting.outputEncoding>

        <avro-maven-plugin.version>1.7.4</avro-maven-plugin.version>
        <maven-replacer-plugin.version>1.3.8</maven-replacer-plugin.version>
        <version.maven.compiler.plugin>3.1</version.maven.compiler.plugin>
        <version.maven.jxr.plugin>2.3</version.maven.jxr.plugin>
        <version.maven.checkstyle.plugin>2.10</version.maven.checkstyle.plugin>
        <version.maven.cobertura.plugin>2.3</version.maven.cobertura.plugin>

        <version.java.source>1.6</version.java.source>
        <version.java.target>1.7</version.java.target>

        <version.hadoop>2.0.0-cdh4.4.0</version.hadoop>
        <version.mapreduce>2.0.0-mr1-cdh4.4.0</version.mapreduce>
        <version.kiji-schema>1.3.2</version.kiji-schema>

        <checkstyle.checks>main</checkstyle.checks>
        <checkstyle.test.checks>main-tests</checkstyle.test.checks>
    </properties>

    <name>kiji-table-layout-updater</name>
    <description>Kiji table layout updater tool</description>
    <groupId>com.opower</groupId>
    <artifactId>kiji-table-layout-updater</artifactId>
    <version>0.1.0</version>
    <packaging>jar</packaging>

    <scm>
        <developerConnection>scm:git:git@github.com:opower/kiji-table-layout-updater.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <dependencies>

        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${version.hadoop}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase</artifactId>
            <version>0.94.6-cdh4.4.0-p161.39</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.kiji.schema</groupId>
            <artifactId>kiji-schema</artifactId>
            <version>${version.kiji-schema}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.kiji.schema-shell</groupId>
            <artifactId>kiji-schema-shell</artifactId>
            <version>${version.kiji-schema}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>1.7.5</version>
        </dependency>

        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.9-RC1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-recipes</artifactId>
            <version>2.3.0</version>
        </dependency>

        <dependency>
            <groupId>org.kiji.schema</groupId>
            <artifactId>kiji-schema</artifactId>
            <version>${version.kiji-schema}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.kiji.testing</groupId>
            <artifactId>fake-hbase</artifactId>
            <version>0.1.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-hdfs</artifactId>
            <version>${version.hadoop}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-core</artifactId>
            <version>${version.mapreduce}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${version.maven.jxr.plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${version.maven.checkstyle.plugin}</version>
                <configuration>
                    <configLocation>checkstyle-${checkstyle.checks}.xml</configLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failsOnError>true</failsOnError>
                    <consoleOutput>true</consoleOutput>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven.compiler.plugin}</version>
                <configuration>
                    <source>${version.java.source}</source>
                    <target>${version.java.target}</target>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>${avro-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                            <goal>idl-protocol</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/resources/avro</sourceDirectory>
                            <createSetters>false</createSetters>
                            <fieldVisibility>private</fieldVisibility>
                            <stringType>String</stringType>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>checkstyle-main</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                        <configuration>
                            <configLocation>checkstyle-${checkstyle.checks}.xml</configLocation>
                            <includeTestSourceDirectory>false</includeTestSourceDirectory>
                            <failsOnError>true</failsOnError>
                            <consoleOutput>true</consoleOutput>
                        </configuration>
                    </execution>
                    <execution>
                        <id>checkstyle-test</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                        <configuration>
                            <configLocation>checkstyle-${checkstyle.test.checks}.xml</configLocation>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <failsOnError>true</failsOnError>
                            <consoleOutput>true</consoleOutput>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!--
                standard unit testing should run classes that start or end with 'Test'
                -->
                <configuration>
                    <argLine>-XX:+HeapDumpOnOutOfMemoryError -Xmx1024M -XX:MaxPermSize=256M</argLine>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <!-- Defines the order the tests will be run in. Supported values are "alphabetical",
                       "reversealphabetical", "random", "hourly" (alphabetical on even hours, reverse alphabetical
                       on odd hours) and "filesystem". -->
                    <runOrder>hourly</runOrder>
                    <systemPropertyVariables>
                        <net.sourceforge.cobertura.datafile>target/cobertura/cobertura.ser</net.sourceforge.cobertura.datafile>
                    </systemPropertyVariables>
                    <includes>
                        <include>**/Test*.java</include>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${version.maven.cobertura.plugin}</version>
                <dependencies>
                    <dependency>
                        <groupId>net.sourceforge.cobertura</groupId>
                        <artifactId>cobertura</artifactId>
                        <version>1.9.3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>commons-collections</groupId>
                                <artifactId>commons-collections</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                             <filters>
                                <!-- Remove signatures from signed JARs -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>tools</shadedClassifierName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>maven-replacer-plugin</artifactId>
                <version>${maven-replacer-plugin.version}</version>
                <configuration>
                    <!-- Use a regex replace to suppress java compiler warnings
                         in the generated code.  What a hack, eh? -->
                    <basedir>${basedir}</basedir>
                </configuration>
                <executions>
                    <execution>
                        <!--
                            In all projects, if you generate avro code, then it should have the following
                            replacement regex run on it.
                        -->
                        <id>suppress-avro-warnings</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <!-- This is a relative path because the plugin prefixes ${basedir} for us. -->
                                <include>target/generated-sources/avro/**/*.java</include>
                                <include>target/generated-test-sources/avro/**/*.java</include>
                            </includes>
                            <regex>false</regex>
                            <replacements>
                                <!-- This is a temporary fix until AVRO-1047 is resolved. -->
                                <replacement>
                                    <token>@SuppressWarnings("all")</token>
                                    <value>@SuppressWarnings("unchecked")</value>
                                </replacement>
                            </replacements>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
